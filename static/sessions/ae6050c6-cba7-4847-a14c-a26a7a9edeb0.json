{"conversation_history": [{"role": "user", "content": "<!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">     <title>Mehwish Chat AI 3.0 - Professional Assistant</title>     <style>         :root {             --primary-color: #6e48aa;             --secondary-color: #9d50bb;             --user-color: #2c82c9;             --ai-color: #2ecc71;             --error-color: #e74c3c;             --background-light: #f9f9f9;             --background-dark: #2c3e50;             --text-light: #333;             --text-dark: #ecf0f1;         }          body {             font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;             background: linear-gradient(135deg, var(--background-light), #e0e0e0);             margin: 0;             padding: 0;             min-height: 100vh;             color: var(--text-light);         }          .container {             max-width: 1200px;             margin: 0 auto;             padding: 20px;         }          .header {             text-align: center;             margin-bottom: 30px;             padding: 20px 0;             background: linear-gradient(to right, var(--primary-color), var(--secondary-color));             color: white;             border-radius: 10px;             box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);         }          .header h2 {             margin: 0;             font-size: 2.2rem;             font-weight: 700;         }          .header p {             margin: 5px 0 0;             font-size: 1rem;             opacity: 0.9;         }          .chat-container {             display: flex;             flex-direction: column;             height: 70vh;             background-color: white;             border-radius: 10px;             box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);             overflow: hidden;         }          #chatBox {             flex: 1;             padding: 20px;             overflow-y: auto;             background-color: white;             scroll-behavior: smooth;         }          .message {             margin-bottom: 15px;             padding: 12px 15px;             border-radius: 18px;             line-height: 1.5;             max-width: 80%;             word-wrap: break-word;             font-size: 1.05rem;             box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);         }          .userMessage {             background-color: var(--user-color);             color: white;             margin-left: auto;             border-bottom-right-radius: 5px;         }          .aiMessage {             background-color: #f1f1f1;             color: var(--text-light);             margin-right: auto;             border-bottom-left-radius: 5px;         }          .aiMessage strong {             color: var(--primary-color);         }          .controls {             display: flex;             padding: 15px;             background-color: #f8f9fa;             border-top: 1px solid #eee;             gap: 10px;             flex-wrap: wrap;         }          .input-group {             flex: 1;             display: flex;             min-width: 250px;         }          #userMessage {             flex: 1;             padding: 12px 15px;             border: 2px solid #ddd;             border-radius: 25px;             font-size: 1rem;             outline: none;             transition: border-color 0.3s;         }          #userMessage:focus {             border-color: var(--primary-color);         }          select {             padding: 10px 15px;             border: 2px solid #ddd;             border-radius: 25px;             background-color: white;             font-size: 0.95rem;             cursor: pointer;             outline: none;             transition: all 0.3s;         }          select:focus {             border-color: var(--primary-color);             box-shadow: 0 0 0 2px rgba(110, 72, 170, 0.2);         }          button {             padding: 10px 25px;             background: linear-gradient(to right, var(--primary-color), var(--secondary-color));             color: white;             border: none;             border-radius: 25px;             font-size: 1rem;             font-weight: 600;             cursor: pointer;             transition: all 0.3s;             box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);         }          button:hover {             transform: translateY(-2px);             box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);             opacity: 0.9;         }          button:active {             transform: translateY(0);         }          .error-message {             color: var(--error-color);             padding: 10px;             margin: 10px 0;             border-radius: 5px;             background-color: rgba(231, 76, 60, 0.1);             font-weight: bold;         }          .typing-indicator {             display: inline-block;             padding: 10px 15px;             background-color: #f1f1f1;             border-radius: 18px;             margin-bottom: 15px;             color: #666;             font-style: italic;         }          .typing-dots {             display: inline-flex;             align-items: center;             height: 17px;         }          .typing-dots span {             width: 8px;             height: 8px;             margin: 0 2px;             background-color: #999;             border-radius: 50%;             display: inline-block;             animation: typingAnimation 1.4s infinite both;         }          .typing-dots span:nth-child(2) {             animation-delay: 0.2s;         }          .typing-dots span:nth-child(3) {             animation-delay: 0.4s;         }          @keyframes typingAnimation {             0%, 60%, 100% { transform: translateY(0); }             30% { transform: translateY(-5px); }         }          @media (max-width: 768px) {             .container {                 padding: 10px;             }                          .header h2 {                 font-size: 1.8rem;             }                          .chat-container {                 height: 65vh;             }                          .message {                 max-width: 90%;                 font-size: 1rem;             }                          .controls {                 flex-direction: column;                 gap: 10px;             }                          .input-group {                 width: 100%;             }                          select, button {                 width: 100%;             }         }     </style> </head> <body>     <div class=\"container\">         <div class=\"header\">             <h2>Mehwish Chat AI 3.0</h2>             <p>Your professional AI assistant for all domains</p>         </div>          <div class=\"chat-container\">             <div id=\"chatBox\">                 <div class=\"aiMessage\">                     <strong>Mehwish AI:</strong> Hello! I'm Mehwish AI 3.0, your professional assistant. How can I help you today?                 </div>             </div>              <div class=\"controls\">                 <div class=\"input-group\">                     <input type=\"text\" id=\"userMessage\" placeholder=\"Type your message here...\" autocomplete=\"off\" />                 </div>                                  <select id=\"languageSelect\">                     <option value=\"roman_urdu\">Roman Urdu</option>                     <option value=\"en\">English</option>                     <option value=\"ur\">Urdu</option>                     <option value=\"es\">Spanish</option>                     <option value=\"fr\">French</option>                     <option value=\"ar\">Arabic</option>                 </select>                                  <select id=\"domainSelect\">                     <option value=\"general\">General</option>                     <option value=\"islamic\">Islamic</option>                     <option value=\"coder\">Programming</option>                     <option value=\"c-language\">C Language</option>                     <option value=\"cpp-language\">C++ Language</option>                     <option value=\"python\">Python</option>                     <option value=\"java\">Java</option>                     <option value=\"banking\">Banking</option>                     <option value=\"science\">Science</option>                     <option value=\"math\">Mathematics</option>                     <option value=\"cyber_security\">Cyber Security</option>                     <option value=\"medical\">Medical</option>                     <option value=\"legal\">Legal</option>                     <option value=\"business\">Business</option>                 </select>                                  <button id=\"sendButton\" onclick=\"sendMessage()\">Send</button>             </div>         </div>     </div>      <script>         // DOM elements         const userMessageInput = document.getElementById('userMessage');         const chatBox = document.getElementById('chatBox');         const sendButton = document.getElementById('sendButton');                  // Handle Enter key press         userMessageInput.addEventListener('keypress', function(e) {             if (e.key === 'Enter') {                 sendMessage();             }         });                  // Show typing indicator         function showTypingIndicator() {             const typingDiv = document.createElement('div');             typingDiv.className = 'typing-indicator';             typingDiv.innerHTML = `                 <strong>Mehwish AI:</strong> Typing                  <span class=\"typing-dots\">                     <span></span>                     <span></span>                     <span></span>                 </span>             `;             chatBox.appendChild(typingDiv);             chatBox.scrollTop = chatBox.scrollHeight;             return typingDiv;         }                  // Remove typing indicator         function removeTypingIndicator(indicator) {             if (indicator && indicator.parentNode) {                 chatBox.removeChild(indicator);             }         }                  // Send message to server         async function sendMessage() {             const message = userMessageInput.value.trim();             if (!message) return;                          const language = document.getElementById('languageSelect').value;             const domain = document.getElementById('domainSelect').value;                          // Display user message             const userMessageDiv = document.createElement('div');             userMessageDiv.className = 'message userMessage';             userMessageDiv.textContent = message;             chatBox.appendChild(userMessageDiv);                          // Clear input             userMessageInput.value = '';                          // Show typing indicator             const typingIndicator = showTypingIndicator();                          try {                 // Disable send button during request                 sendButton.disabled = true;                                  // Simulate API call (replace with actual fetch)                 const response = await simulateApiCall(message, language, domain);                                  // Remove typing indicator                 removeTypingIndicator(typingIndicator);                                  // Display AI response                 const aiMessageDiv = document.createElement('div');                 aiMessageDiv.className = 'message aiMessage';                 aiMessageDiv.innerHTML = `<strong>Mehwish AI:</strong> ${response}`;                 chatBox.appendChild(aiMessageDiv);                              } catch (error) {                 // Remove typing indicator                 removeTypingIndicator(typingIndicator);                                  // Display error message                 const errorDiv = document.createElement('div');                 errorDiv.className = 'error-message';                 errorDiv.textContent = `Error: ${error.message}`;                 chatBox.appendChild(errorDiv);             } finally {                 // Re-enable send button                 sendButton.disabled = false;                                  // Scroll to bottom                 chatBox.scrollTop = chatBox.scrollHeight;             }         }                  // Simulate API call (replace with actual fetch)         function simulateApiCall(message, language, domain) {             return new Promise((resolve) => {                 // Simulate network delay                 setTimeout(() => {                     // This is a simulation - replace with actual fetch                     const responses = {                         general: \"I can help you with general information and questions.\",                         islamic: \"In Islamic context, we should always seek knowledge with good intentions.\",                         coder: \"For programming help, please specify your exact problem for better assistance.\",                         \"c-language\": \"In C language, remember to manage your memory properly.\",                         \"cpp-language\": \"C++ offers object-oriented programming features not available in C.\",                         banking: \"For banking queries, I can provide general information but not financial advice.\",                         science: \"Science is the systematic study of the natural world through observation and experiment.\",                         math: \"Mathematics is the language of the universe, describing patterns and relationships.\",                         cyber_security: \"Cybersecurity requires vigilance in all digital activities.\",                         medical: \"For medical advice, always consult a qualified healthcare professional.\",                         legal: \"Legal matters should be addressed by licensed attorneys in your jurisdiction.\"                     };                                          const defaultResponse = \"I've received your message. How can I assist you further?\";                     const response = responses[domain] || defaultResponse;                                          resolve(response);                 }, 1500); // Simulate 1.5 second delay             });         }                  // Uncomment and use this for actual API calls         /*         async function callChatApi(message, language, domain) {             try {                 const response = await fetch('/api/chat', {                     method: 'POST',                     headers: {                          'Content-Type': 'application/json',                         'Authorization': 'Bearer YOUR_API_KEY_IF_NEEDED'                     },                     body: JSON.stringify({                          message,                          language,                          domain                      })                 });                                  if (!response.ok) {                     throw new Error(`HTTP error! status: ${response.status}`);                 }                                  const data = await response.json();                 return data.response || \"I didn't get a proper response.\";                              } catch (error) {                 console.error('API call failed:', error);                 throw error;             }         }         */     </script> </body> </html>", "timestamp": "2025-08-18T14:32:13.211213"}, {"role": "assistant", "content": "Assalamu Alaikum! asal\u0101m alaykum! \u0645\u06cc\u06ba \u0645\u06cc\u06c1\u0648\u0634 \u0686\u06cc\u0679 \u0627\u06cc \u0622\u0626\u06cc \u06f3.\u06f0 \u06c1\u0648\u06ba\u060c \u0622\u067e \u06a9\u0627 \u067e\u06cc\u0634\u06c1 \u0648\u0631\u0627\u0646\u06c1 \u0645\u0639\u0627\u0648\u0646 \u06c1\u0648\u06ba\u06d4 \u0622\u067e \u06a9\u0633 \u06a9\u06d2 \u0628\u0627\u0631\u06d2 \u0645\u06cc\u06ba \u067e\u0648\u0686\u06be\u0646\u0627 \u0686\u0627\u06c1\u062a\u06d2 \u06c1\u06cc\u06ba\u061f", "timestamp": "2025-08-18T14:32:14.466631"}], "recordings": [], "first_message": false, "created_at": "2025-08-18T14:15:09.135629", "last_activity": "2025-08-18T14:32:13.211213", "settings": {"language": "roman_urdu", "domain": "general", "temperature": 0.7}}